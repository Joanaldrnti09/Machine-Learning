# -*- coding: utf-8 -*-
"""Open Weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z4CvEiuvSakSggm_MJirdtWDG4WX0FZ1
"""

# -*- coding: utf-8 -*-
"""
Created on Mon Dec 10 10:13:21 2018
@author: Christine
"""
import datetime
import json
import urllib.request

def time_converter(time):
  converted_time = datetime.datetime.fromtimestamp(
    int(time)
  ).strftime('%I:%M %p')
  return converted_time

def url_builder(city_id):
  user_api = 'd1257abe9a3803a597d26eb9c929036b' # Obtain yours form: http://openweathermap.org/
  unit = 'metric' # For Fahrenheit use imperial, for Celsius use metric, and the default is Kelvin.
  api = 'http://api.openweathermap.org/data/2.5/weather?id=' #Search for your city ID here: http://bulk.openweathermap.org/sample/city.list.json.gz
  full_api_url = api + str(city_id) + '&mode=json&units=' + unit + '&APPID=' + user_api
  return full_api_url

def data_fetch(full_api_url):
  url = urllib.request.urlopen(full_api_url)
  output = url.read().decode('utf-8')
  raw_api_dict = json.loads(output)
  url.close()
  return raw_api_dict

def data_organizer(raw_api_dict):
  data = dict(
    city=raw_api_dict.get('name'),
    country=raw_api_dict.get('sys').get('country'),
    temp=raw_api_dict.get('main').get('temp'),
    temp_max=raw_api_dict.get('main').get('temp_max'),
    temp_min=raw_api_dict.get('main').get('temp_min'),
    humidity=raw_api_dict.get('main').get('humidity'),
    pressure=raw_api_dict.get('main').get('pressure'),
    sky=raw_api_dict['weather'][0]['main'],

sunrise=time_converter(raw_api_dict.get('sys').get('sunrise')),
    sunset=time_converter(raw_api_dict.get('sys').get('sunset')),
    wind=raw_api_dict.get('wind').get('speed'),
    wind_deg=raw_api_dict.get('deg'),
    dt=time_converter(raw_api_dict.get('dt')),
    cloudiness=raw_api_dict.get('clouds').get('all'),
    visibility=raw_api_dict.get('visibility') / 1000,
    dew_point=raw_api_dict.get('main').get('dew_point')
  )
  return data

def data_output(data):
  m_symbol = '\xb0' + 'C'
  print('---------------------------------------')
  print('Current weather in: {}, {}:'.format(data['city'],
data['country']))
  print(data['temp'], m_symbol, data['sky'])
  print('Max: {}, Min: {}'.format(data['temp_max'],
data['temp_min']))
  print('')
  print('Wind Speed: {}, Degree: {}'.format(data['wind'],
data['wind_deg']))
  print('Humidity: {}'.format(data['humidity']))
  print('Cloud: {}'.format(data['cloudiness']))
  print('Pressure: {}'.format(data['pressure']))
  print('Sunrise at: {}'.format(data['sunrise']))
  print('Sunset at: {}'.format(data['sunset']))
  print('')
  print('Dew Point: {}{}'.format(data['dew_point'], m_symbol))
  print('Visibility: {} km'.format(data['visibility']))
  print('')
  print('Last update from the server: {}'.format(data['dt']))
  print('---------------------------------------')

#Pocitos id 3441011
if __name__ == '__main__':
  try:
    data_output(data_organizer(data_fetch(url_builder(3441011))))
  except IOError:
    print('no internet')

#Rillo de Gallo id 3111724
if __name__ == '__main__':
  try:
    data_output(data_organizer(data_fetch(url_builder(3111724))))
  except IOError:
    print('no internet')

#Langchuan id 1916670
if __name__ == '__main__':
  try:
    data_output(data_organizer(data_fetch(url_builder(1916670))))
  except IOError:
    print('no internet')

#Huanshan id 1916398
if __name__ == '__main__':
  try:
    data_output(data_organizer(data_fetch(url_builder(1916398))))
  except IOError:
    print('no internet')

#Carmonita id 6355896
if __name__ == '__main__':
  try:
    data_output(data_organizer(data_fetch(url_builder(6355896))))
  except IOError:
    print('no internet')